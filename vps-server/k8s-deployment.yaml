apiVersion: v1
kind: Namespace
metadata:
  name: vps-server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vps-server-config
  namespace: vps-server
data:
  application.yml: |
    spring:
      application:
        name: rabbitvps-server
      datasource:
        url: jdbc:postgresql://postgresql.postgresql.svc.cluster.local:5432/vps
        driver-class-name: org.postgresql.Driver
        username: root
        password: Gnc2tKqOsb

      jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        hibernate:
          ddl-auto: update
        show-sql: false
        defer-datasource-initialization: true
      sql:
        init:
          mode: always
          data-locations: classpath:data.sql
      security:
        user:
          name: admin
          password: admin
      # 邮件配置
      mail:
        host: smtp.163.com
        username: rabbitvps@163.com
        password: FTgbv34HJxAgKimZ
        properties:
          mail:
            smtp:
              auth: true
              starttls:
                enable: true
                required: true
              ssl:
                trust: smtp.163.com

    jwt:
      secret: mySecretKey123456789012345678901234567890
      expiration: 0 # 永不过期

    server:
      port: 8080

    logging:
      level:
        com.rabbitvps: DEBUG

    # 支付配置
    payment:
      ezpay:
        pid: "4146"
        key: "ZOTFJ4JWGDD36ZJyQz3dWwJUBv3Jqq3r"
        submit-url: "https://ezfp.cn/submit.php"
        api-url: "https://ezfp.cn/mapi.php"
        notify-url: "https://rabbitvps.com/api/payment/notify"
        return-url: "https://rabbitvps.com/recharge"
---
apiVersion: v1
kind: Secret
metadata:
  name: vps-server-secrets
  namespace: vps-server
type: Opaque
data:
  # 数据库密码 (base64编码: mfZiV@!bmr&n)
  db-password: bWZaaVZAIWJtciZu
  # JWT密钥 (base64编码)
  jwt-secret: bXlTZWNyZXRLZXkxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTA=
  # 邮箱密码 (base64编码: FTgbv34HJxAgKimZ)
  mail-password: RlRnYnYzNEhKeEFnS2ltWg==
  # 支付密钥 (base64编码: ZOTFJ4JWGDD36ZJyQz3dWwJUBv3Jqq3r)
  payment-key: Wk9URko0SldHREQzNlpKeVF6M2RXd0pVQnYzSnFxM3I=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vps-server
  namespace: vps-server
  labels:
    app: vps-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vps-server
  template:
    metadata:
      labels:
        app: vps-server
    spec:
      containers:
      - name: vps-server
        image: ghcr.io/administrator/vps-server:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vps-server-secrets
              key: db-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: vps-server-secrets
              key: jwt-secret
        - name: SPRING_MAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vps-server-secrets
              key: mail-password
        - name: PAYMENT_EZPAY_KEY
          valueFrom:
            secretKeyRef:
              name: vps-server-secrets
              key: payment-key
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: config-volume
        configMap:
          name: vps-server-config
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: vps-server-service
  namespace: vps-server
  labels:
    app: vps-server
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: vps-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vps-server-ingress
  namespace: vps-server
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: vps-api.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vps-server-service
            port:
              number: 8080
